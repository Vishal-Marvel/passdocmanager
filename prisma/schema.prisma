// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  viewPassword String
  userId       String     @unique
  updatedAt    DateTime?  @updatedAt
  Password     Password[]
  Category     Category[]
  Document     Document[]
}

model Document {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @db.ObjectId
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  salt       String
  categoryId String?   @db.ObjectId // Add a nullable field to store the Category ID
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull) // Define the relationship
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  document   String
  name       String
}

model Category {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  Password Password[]
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String     @db.ObjectId
  Document Document[]
}

model Password {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @db.ObjectId
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  key        String
  value      String
  salt       String
  categoryId String?   @db.ObjectId // Add a nullable field to store the Category ID
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull) // Define the relationship
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
